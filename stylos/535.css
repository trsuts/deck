.qksfa46{cursor:pointer;margin-top:auto;margin-bottom:auto;margin-left:8px;}.qksfa46 span:hover{color:var(--primary) !important;}
/*# sourceMappingURL=data:application/json;base64,*/
.cds-lottieStyles-lm56ca2 .palette_foreground_stroke{stroke:var(--foreground);}.cds-lottieStyles-lm56ca2 .palette_foreground_fill{fill:var(--foreground);}.cds-lottieStyles-lm56ca2 .palette_foregroundMuted_stroke{stroke:var(--foreground-muted);}.cds-lottieStyles-lm56ca2 .palette_foregroundMuted_fill{fill:var(--foreground-muted);}.cds-lottieStyles-lm56ca2 .palette_background_stroke{stroke:var(--background);}.cds-lottieStyles-lm56ca2 .palette_background_fill{fill:var(--background);}.cds-lottieStyles-lm56ca2 .palette_backgroundAlternate_stroke{stroke:var(--background-alternate);}.cds-lottieStyles-lm56ca2 .palette_backgroundAlternate_fill{fill:var(--background-alternate);}.cds-lottieStyles-lm56ca2 .palette_backgroundOverlay_stroke{stroke:var(--background-overlay);}.cds-lottieStyles-lm56ca2 .palette_backgroundOverlay_fill{fill:var(--background-overlay);}.cds-lottieStyles-lm56ca2 .palette_line_stroke{stroke:var(--line);}.cds-lottieStyles-lm56ca2 .palette_line_fill{fill:var(--line);}.cds-lottieStyles-lm56ca2 .palette_lineHeavy_stroke{stroke:var(--line-heavy);}.cds-lottieStyles-lm56ca2 .palette_lineHeavy_fill{fill:var(--line-heavy);}.cds-lottieStyles-lm56ca2 .palette_primary_stroke{stroke:var(--primary);}.cds-lottieStyles-lm56ca2 .palette_primary_fill{fill:var(--primary);}.cds-lottieStyles-lm56ca2 .palette_primaryWash_stroke{stroke:var(--primary-wash);}.cds-lottieStyles-lm56ca2 .palette_primaryWash_fill{fill:var(--primary-wash);}.cds-lottieStyles-lm56ca2 .palette_primaryForeground_stroke{stroke:var(--primary-foreground);}.cds-lottieStyles-lm56ca2 .palette_primaryForeground_fill{fill:var(--primary-foreground);}.cds-lottieStyles-lm56ca2 .palette_negative_stroke{stroke:var(--negative);}.cds-lottieStyles-lm56ca2 .palette_negative_fill{fill:var(--negative);}.cds-lottieStyles-lm56ca2 .palette_negativeForeground_stroke{stroke:var(--negative-foreground);}.cds-lottieStyles-lm56ca2 .palette_negativeForeground_fill{fill:var(--negative-foreground);}.cds-lottieStyles-lm56ca2 .palette_positive_stroke{stroke:var(--positive);}.cds-lottieStyles-lm56ca2 .palette_positive_fill{fill:var(--positive);}.cds-lottieStyles-lm56ca2 .palette_positiveForeground_stroke{stroke:var(--positive-foreground);}.cds-lottieStyles-lm56ca2 .palette_positiveForeground_fill{fill:var(--positive-foreground);}.cds-lottieStyles-lm56ca2 .palette_secondary_stroke{stroke:var(--secondary);}.cds-lottieStyles-lm56ca2 .palette_secondary_fill{fill:var(--secondary);}.cds-lottieStyles-lm56ca2 .palette_secondaryForeground_stroke{stroke:var(--secondary-foreground);}.cds-lottieStyles-lm56ca2 .palette_secondaryForeground_fill{fill:var(--secondary-foreground);}

/*# sourceMappingURL=535.css.map*/