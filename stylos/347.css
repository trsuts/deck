.b174j4w6{word-break:break-word;}
.din4m86{background-color:rgb(207 32 47 / 20%);}
.c1ysqala{width:95px;height:95px;border-radius:50%;}
.s1c635uo{position:relative;overflow-y:scroll;overflow-x:hidden;height:400px;}
.c1pucwfu{position:-webkit-sticky;position:sticky;inset:0;background-image:linear-gradient(to bottom,rgba(255,0,0,0),rgba(255,255,255,1));height:100%;width:100%;z-index:2;}
.rhy2au5{--interactable-height:56px;--interactable-opacity:1;--interactable-opacity-hovered:0.9;--interactable-opacity-pressed:0.92;--negative:rgb(var(--red60));--interactable-overlay:var(--negative);--interactable-underlay:var(--foreground);display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;text-align:center;vertical-align:middle;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;font-weight:600;margin:0;position:relative;white-space:nowrap;-webkit-appearance:none;-moz-appearance:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;overflow:visible;text-transform:none;height:var(--interactable-height);color:var(--primary-foreground);position:relative;border-width:1px;border:1px solid var(--line);padding:0;-webkit-transform:scale(1);-ms-transform:scale(1);-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);border-radius:8px;background-color:rgba(var(--red60),var(--interactable-opacity));}.rhy2au5:hover{--interactable-opacity:var(--interactable-opacity-hovered);}
/*# sourceMappingURL=data:application/json;base64,*/

/*# sourceMappingURL=347.css.map*/