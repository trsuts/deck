.c1edvmru{padding:16px;border-top:1px solid var(--background-alternate);}@media (prefers-color-scheme:dark){.c1edvmru{border-color:var(--line);}}.c1edvmru > div:nth-child(1){float:left;width:70%;margin-top:4px;}.c1edvmru > div:nth-child(2){float:right;}
.eh2xfe9{height:var(--eh2xfe9-0);width:var(--eh2xfe9-0);}
.qka3q35{margin:0px 15px;}@media (prefers-color-scheme:dark){.qka3q35{margin:23px 38px 22px;}.qka3q35 img{border-radius:16px;}}
.c7timcm{border:1px solid var(--background-alternate);border-radius:4px;color:var(--primary);width:68px;height:40px;line-height:40px;text-align:center;font-size:14px;font-weight:bold;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;}@media (prefers-color-scheme:dark){.c7timcm{border-color:var(--line);}}.c7timcm:hover{background-color:var(--primary-wash);}
.c1vo2c0q{background-color:var(--positive) !important;color:var(--background);}
.b15klv2q > div{border-color:var(--background-alternate);border-radius:16px;}@media (prefers-color-scheme:dark){.b15klv2q > div{border-color:var(--line);}}
/*# sourceMappingURL=data:application/json;base64,*/
.sekejbk{margin:8px auto 0;height:355px;width:312px;}
.svk4s1o{height:100%;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border:1px solid var(--background-alternate);box-sizing:border-box;border-radius:16px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}@media (prefers-color-scheme:dark){.svk4s1o{border-color:var(--line);background-color:var(--background-alternate);}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zY3JlZW5zL1JlY2VpdmUvVXNlcm5hbWUudHN4Il0sIm5hbWVzIjpbIi5zZWtlamJrIiwiLnN2azRzMW8iXSwibWFwcGluZ3MiOiJBQXVDTUE7QUFNQUMiLCJmaWxlIjoic3JjL3NjcmVlbnMvUmVjZWl2ZS9Vc2VybmFtZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmaW5lTWVzc2FnZXMsIHVzZUludGwgfSBmcm9tICdyZWFjdC1pbnRsJztcbmltcG9ydCBzZW5kVG9Vc2VybmFtZUljb24gZnJvbSAnQGFzc2V0cy9zZW5kVG9Vc2VybmFtZS5zdmcnO1xuaW1wb3J0IHsgTG9nZ2VkSW5Db250ZXh0IH0gZnJvbSAnQGNvbnRleHRzL0xvZ2dlZEluQ29udGV4dCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAbGluYXJpYS9jb3JlJztcbmltcG9ydCB7IEJveCB9IGZyb20gJ0BjYmhxL2Nkcy13ZWIvbGF5b3V0Lyc7XG5pbXBvcnQgeyBUZXh0TGFiZWwyLCBUZXh0VGl0bGUxIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi90eXBvZ3JhcGh5Lyc7XG5cbmNvbnN0IGkxOG5LZXkgPSAnVXNlcm5hbWUnO1xuXG5jb25zdCBtZXNzYWdlcyA9IGRlZmluZU1lc3NhZ2VzKHtcbiAgc2VuZFRvVXNlcm5hbWVQcm9tcHQ6IHtcbiAgICBpZDogYCR7aTE4bktleX0uc2VuZFRvVXNlcm5hbWVQcm9tcHRgLFxuICAgIGRlZmF1bHRNZXNzYWdlOiAnQ29pbmJhc2UgV2FsbGV0IHVzZXJzIGNhbiBzZW5kIGNyeXB0byB0byB5b3UgdXNpbmcgdGhpcyB1c2VybmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdTZW5kIHRvIHVzZXJuYW1lIHByb21wdCcsXG4gIH0sXG59KTtcblxuZXhwb3J0IGZ1bmN0aW9uIFVzZXJuYW1lKCkge1xuICBjb25zdCB7IGZvcm1hdE1lc3NhZ2UgfSA9IHVzZUludGwoKTtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoTG9nZ2VkSW5Db250ZXh0KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzZW5kVG9Vc2VybmFtZUNvbnRhaW5lcn0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17c2VuZFRvVXNlcm5hbWVGcmFtZX0+XG4gICAgICAgIDxCb3ggYXM9XCJkaXZcIiBoZWlnaHQ9XCIyMDBweFwiIHdpZHRoPVwiMjQwcHhcIiBhbGlnbkl0ZW1zPVwiYmFzZWxpbmVcIiBvdmVyZmxvdz1cImhpZGRlblwiPlxuICAgICAgICAgIDxpbWcgc3JjPXtzZW5kVG9Vc2VybmFtZUljb259IGFsdD1cIlNlbmQgdG8gdXNlcm5hbWUgaWNvblwiIC8+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8VGV4dFRpdGxlMSBhcz1cImgyXCI+e2BAJHtjb250ZXh0LnVzZXJuYW1lfWB9PC9UZXh0VGl0bGUxPlxuICAgICAgICA8Qm94IHNwYWNpbmc9ezR9PlxuICAgICAgICAgIDxUZXh0TGFiZWwyIGFzPVwicFwiIGNvbG9yPVwiZm9yZWdyb3VuZE11dGVkXCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIHtmb3JtYXRNZXNzYWdlKG1lc3NhZ2VzLnNlbmRUb1VzZXJuYW1lUHJvbXB0KX1cbiAgICAgICAgICA8L1RleHRMYWJlbDI+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmNvbnN0IHNlbmRUb1VzZXJuYW1lQ29udGFpbmVyID0gY3NzYFxuICBtYXJnaW46IDhweCBhdXRvIDA7XG4gIGhlaWdodDogMzU1cHg7XG4gIHdpZHRoOiAzMTJweDtcbmA7XG5cbmNvbnN0IHNlbmRUb1VzZXJuYW1lRnJhbWUgPSBjc3NgXG4gIGhlaWdodDogMTAwJTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJhY2tncm91bmQtYWx0ZXJuYXRlKTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICBAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1saW5lKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLWFsdGVybmF0ZSk7XG4gIH1cbmA7XG4iXX0=*/
.p1s17e52{text-align:center;margin-bottom:16px;}.p1s17e52 > button:first-child{margin-right:40px;}
@media (prefers-color-scheme:dark){.pckho3h button:hover{background:var(--background-alternate);}}
.th20qpf{font-size:13px;color:var(--foreground-muted);text-align:center;margin-top:30px;}
/*# sourceMappingURL=data:application/json;base64,*/

/*# sourceMappingURL=913.css.map*/